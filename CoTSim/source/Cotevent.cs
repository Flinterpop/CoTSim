// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cotevent.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;

namespace Atakmap.Commoncommo.Protobuf.V1 {

        /// <summary>Holder for reflection information generated from cotevent.proto</summary>
        public static partial class CoteventReflection {

    #region Descriptor
    /// <summary>File descriptor for cotevent.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoteventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5jb3RldmVudC5wcm90bxIfYXRha21hcC5jb21tb25jb21tby5wcm90b2J1",
            "Zi52MRoMZGV0YWlsLnByb3RvIo0CCghDb3RFdmVudBIMCgR0eXBlGAEgASgJ",
            "Eg4KBmFjY2VzcxgCIAEoCRILCgNxb3MYAyABKAkSDAoEb3BleBgEIAEoCRIL",
            "CgN1aWQYBSABKAkSEAoIc2VuZFRpbWUYBiABKAQSEQoJc3RhcnRUaW1lGAcg",
            "ASgEEhEKCXN0YWxlVGltZRgIIAEoBBILCgNob3cYCSABKAkSCwoDbGF0GAog",
            "ASgBEgsKA2xvbhgLIAEoARILCgNoYWUYDCABKAESCgoCY2UYDSABKAESCgoC",
            "bGUYDiABKAESNwoGZGV0YWlsGA8gASgLMicuYXRha21hcC5jb21tb25jb21t",
            "by5wcm90b2J1Zi52MS5EZXRhaWxCAkgDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Atakmap.Commoncommo.Protobuf.V1.DetailReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Atakmap.Commoncommo.Protobuf.V1.CotEvent), global::Atakmap.Commoncommo.Protobuf.V1.CotEvent.Parser, new[]{ "Type", "Access", "Qos", "Opex", "Uid", "SendTime", "StartTime", "StaleTime", "How", "Lat", "Lon", "Hae", "Ce", "Le", "Detail" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A note about timestamps:
  /// Uses "timeMs" units, which is number of milliseconds since
  /// 1970-01-01 00:00:00 UTC
  ///
  /// All items are required unless otherwise noted!
  /// "required" means if they are missing in the XML during outbound
  /// conversion to protobuf, the message will be
  /// rejected
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CotEvent : pb::IMessage<CotEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CotEvent> _parser = new pb::MessageParser<CotEvent>(() => new CotEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CotEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Atakmap.Commoncommo.Protobuf.V1.CoteventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CotEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CotEvent(CotEvent other) : this() {
      type_ = other.type_;
      access_ = other.access_;
      qos_ = other.qos_;
      opex_ = other.opex_;
      uid_ = other.uid_;
      sendTime_ = other.sendTime_;
      startTime_ = other.startTime_;
      staleTime_ = other.staleTime_;
      how_ = other.how_;
      lat_ = other.lat_;
      lon_ = other.lon_;
      hae_ = other.hae_;
      ce_ = other.ce_;
      le_ = other.le_;
      detail_ = other.detail_ != null ? other.detail_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CotEvent Clone() {
      return new CotEvent(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    /// <summary>
    /// &lt;event type="x">
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access" field.</summary>
    public const int AccessFieldNumber = 2;
    private string access_ = "";
    /// <summary>
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Access {
      get { return access_; }
      set {
        access_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qos" field.</summary>
    public const int QosFieldNumber = 3;
    private string qos_ = "";
    /// <summary>
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Qos {
      get { return qos_; }
      set {
        qos_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "opex" field.</summary>
    public const int OpexFieldNumber = 4;
    private string opex_ = "";
    /// <summary>
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Opex {
      get { return opex_; }
      set {
        opex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 5;
    private string uid_ = "";
    /// <summary>
    /// &lt;event uid="x">
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sendTime" field.</summary>
    public const int SendTimeFieldNumber = 6;
    private ulong sendTime_;
    /// <summary>
    /// &lt;event time="x"> converted to timeMs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 7;
    private ulong startTime_;
    /// <summary>
    /// &lt;event start="x"> converted to timeMs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "staleTime" field.</summary>
    public const int StaleTimeFieldNumber = 8;
    private ulong staleTime_;
    /// <summary>
    /// &lt;event stale="x"> converted to timeMs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong StaleTime {
      get { return staleTime_; }
      set {
        staleTime_ = value;
      }
    }

    /// <summary>Field number for the "how" field.</summary>
    public const int HowFieldNumber = 9;
    private string how_ = "";
    /// <summary>
    /// &lt;event how="x">
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string How {
      get { return how_; }
      set {
        how_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lat" field.</summary>
    public const int LatFieldNumber = 10;
    private double lat_;
    /// <summary>
    /// &lt;point>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Lat {
      get { return lat_; }
      set {
        lat_ = value;
      }
    }

    /// <summary>Field number for the "lon" field.</summary>
    public const int LonFieldNumber = 11;
    private double lon_;
    /// <summary>
    /// &lt;point lon="x">
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Lon {
      get { return lon_; }
      set {
        lon_ = value;
      }
    }

    /// <summary>Field number for the "hae" field.</summary>
    public const int HaeFieldNumber = 12;
    private double hae_;
    /// <summary>
    /// &lt;point hae="x"> use 999999 for unknown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Hae {
      get { return hae_; }
      set {
        hae_ = value;
      }
    }

    /// <summary>Field number for the "ce" field.</summary>
    public const int CeFieldNumber = 13;
    private double ce_;
    /// <summary>
    /// &lt;point ce="x"> use 999999 for unknown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Ce {
      get { return ce_; }
      set {
        ce_ = value;
      }
    }

    /// <summary>Field number for the "le" field.</summary>
    public const int LeFieldNumber = 14;
    private double le_;
    /// <summary>
    /// &lt;point ce="x"> use 999999 for unknown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Le {
      get { return le_; }
      set {
        le_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 15;
    private global::Atakmap.Commoncommo.Protobuf.V1.Detail detail_;
    /// <summary>
    /// comprises children of &lt;detail>
    /// This is optional - if omitted, then the cot message
    /// had no data under &lt;detail>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Atakmap.Commoncommo.Protobuf.V1.Detail Detail {
      get { return detail_; }
      set {
        detail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CotEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CotEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Access != other.Access) return false;
      if (Qos != other.Qos) return false;
      if (Opex != other.Opex) return false;
      if (Uid != other.Uid) return false;
      if (SendTime != other.SendTime) return false;
      if (StartTime != other.StartTime) return false;
      if (StaleTime != other.StaleTime) return false;
      if (How != other.How) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lat, other.Lat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lon, other.Lon)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Hae, other.Hae)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Ce, other.Ce)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Le, other.Le)) return false;
      if (!object.Equals(Detail, other.Detail)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Access.Length != 0) hash ^= Access.GetHashCode();
      if (Qos.Length != 0) hash ^= Qos.GetHashCode();
      if (Opex.Length != 0) hash ^= Opex.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (SendTime != 0UL) hash ^= SendTime.GetHashCode();
      if (StartTime != 0UL) hash ^= StartTime.GetHashCode();
      if (StaleTime != 0UL) hash ^= StaleTime.GetHashCode();
      if (How.Length != 0) hash ^= How.GetHashCode();
      if (Lat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lat);
      if (Lon != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lon);
      if (Hae != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Hae);
      if (Ce != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Ce);
      if (Le != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Le);
      if (detail_ != null) hash ^= Detail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Access.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Access);
      }
      if (Qos.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Qos);
      }
      if (Opex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Opex);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Uid);
      }
      if (SendTime != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(SendTime);
      }
      if (StartTime != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(StartTime);
      }
      if (StaleTime != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(StaleTime);
      }
      if (How.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(How);
      }
      if (Lat != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Lat);
      }
      if (Lon != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Lon);
      }
      if (Hae != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(Hae);
      }
      if (Ce != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(Ce);
      }
      if (Le != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(Le);
      }
      if (detail_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Detail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Access.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Access);
      }
      if (Qos.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Qos);
      }
      if (Opex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Opex);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Uid);
      }
      if (SendTime != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(SendTime);
      }
      if (StartTime != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(StartTime);
      }
      if (StaleTime != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(StaleTime);
      }
      if (How.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(How);
      }
      if (Lat != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Lat);
      }
      if (Lon != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Lon);
      }
      if (Hae != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(Hae);
      }
      if (Ce != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(Ce);
      }
      if (Le != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(Le);
      }
      if (detail_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Detail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Access.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Access);
      }
      if (Qos.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Qos);
      }
      if (Opex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Opex);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (SendTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SendTime);
      }
      if (StartTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartTime);
      }
      if (StaleTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StaleTime);
      }
      if (How.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(How);
      }
      if (Lat != 0D) {
        size += 1 + 8;
      }
      if (Lon != 0D) {
        size += 1 + 8;
      }
      if (Hae != 0D) {
        size += 1 + 8;
      }
      if (Ce != 0D) {
        size += 1 + 8;
      }
      if (Le != 0D) {
        size += 1 + 8;
      }
      if (detail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Detail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CotEvent other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Access.Length != 0) {
        Access = other.Access;
      }
      if (other.Qos.Length != 0) {
        Qos = other.Qos;
      }
      if (other.Opex.Length != 0) {
        Opex = other.Opex;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.SendTime != 0UL) {
        SendTime = other.SendTime;
      }
      if (other.StartTime != 0UL) {
        StartTime = other.StartTime;
      }
      if (other.StaleTime != 0UL) {
        StaleTime = other.StaleTime;
      }
      if (other.How.Length != 0) {
        How = other.How;
      }
      if (other.Lat != 0D) {
        Lat = other.Lat;
      }
      if (other.Lon != 0D) {
        Lon = other.Lon;
      }
      if (other.Hae != 0D) {
        Hae = other.Hae;
      }
      if (other.Ce != 0D) {
        Ce = other.Ce;
      }
      if (other.Le != 0D) {
        Le = other.Le;
      }
      if (other.detail_ != null) {
        if (detail_ == null) {
          Detail = new global::Atakmap.Commoncommo.Protobuf.V1.Detail();
        }
        Detail.MergeFrom(other.Detail);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Access = input.ReadString();
            break;
          }
          case 26: {
            Qos = input.ReadString();
            break;
          }
          case 34: {
            Opex = input.ReadString();
            break;
          }
          case 42: {
            Uid = input.ReadString();
            break;
          }
          case 48: {
            SendTime = input.ReadUInt64();
            break;
          }
          case 56: {
            StartTime = input.ReadUInt64();
            break;
          }
          case 64: {
            StaleTime = input.ReadUInt64();
            break;
          }
          case 74: {
            How = input.ReadString();
            break;
          }
          case 81: {
            Lat = input.ReadDouble();
            break;
          }
          case 89: {
            Lon = input.ReadDouble();
            break;
          }
          case 97: {
            Hae = input.ReadDouble();
            break;
          }
          case 105: {
            Ce = input.ReadDouble();
            break;
          }
          case 113: {
            Le = input.ReadDouble();
            break;
          }
          case 122: {
            if (detail_ == null) {
              Detail = new global::Atakmap.Commoncommo.Protobuf.V1.Detail();
            }
            input.ReadMessage(Detail);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Access = input.ReadString();
            break;
          }
          case 26: {
            Qos = input.ReadString();
            break;
          }
          case 34: {
            Opex = input.ReadString();
            break;
          }
          case 42: {
            Uid = input.ReadString();
            break;
          }
          case 48: {
            SendTime = input.ReadUInt64();
            break;
          }
          case 56: {
            StartTime = input.ReadUInt64();
            break;
          }
          case 64: {
            StaleTime = input.ReadUInt64();
            break;
          }
          case 74: {
            How = input.ReadString();
            break;
          }
          case 81: {
            Lat = input.ReadDouble();
            break;
          }
          case 89: {
            Lon = input.ReadDouble();
            break;
          }
          case 97: {
            Hae = input.ReadDouble();
            break;
          }
          case 105: {
            Ce = input.ReadDouble();
            break;
          }
          case 113: {
            Le = input.ReadDouble();
            break;
          }
          case 122: {
            if (detail_ == null) {
              Detail = new global::Atakmap.Commoncommo.Protobuf.V1.Detail();
            }
            input.ReadMessage(Detail);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
