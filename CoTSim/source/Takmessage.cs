// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: takmessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Atakmap.Commoncommo.Protobuf.V1 {

  /// <summary>Holder for reflection information generated from takmessage.proto</summary>
  public static partial class TakmessageReflection {

    #region Descriptor
    /// <summary>File descriptor for takmessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TakmessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChB0YWttZXNzYWdlLnByb3RvEh9hdGFrbWFwLmNvbW1vbmNvbW1vLnByb3Rv",
            "YnVmLnYxGg5jb3RldmVudC5wcm90bxoQdGFrY29udHJvbC5wcm90byKKAQoK",
            "VGFrTWVzc2FnZRI/Cgp0YWtDb250cm9sGAEgASgLMisuYXRha21hcC5jb21t",
            "b25jb21tby5wcm90b2J1Zi52MS5UYWtDb250cm9sEjsKCGNvdEV2ZW50GAIg",
            "ASgLMikuYXRha21hcC5jb21tb25jb21tby5wcm90b2J1Zi52MS5Db3RFdmVu",
            "dEICSANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Atakmap.Commoncommo.Protobuf.V1.CoteventReflection.Descriptor, global::Atakmap.Commoncommo.Protobuf.V1.TakcontrolReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Atakmap.Commoncommo.Protobuf.V1.TakMessage), global::Atakmap.Commoncommo.Protobuf.V1.TakMessage.Parser, new[]{ "TakControl", "CotEvent" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Top level message sent for TAK Messaging Protocol Version 1.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TakMessage : pb::IMessage<TakMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TakMessage> _parser = new pb::MessageParser<TakMessage>(() => new TakMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TakMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Atakmap.Commoncommo.Protobuf.V1.TakmessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TakMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TakMessage(TakMessage other) : this() {
      takControl_ = other.takControl_ != null ? other.takControl_.Clone() : null;
      cotEvent_ = other.cotEvent_ != null ? other.cotEvent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TakMessage Clone() {
      return new TakMessage(this);
    }

    /// <summary>Field number for the "takControl" field.</summary>
    public const int TakControlFieldNumber = 1;
    private global::Atakmap.Commoncommo.Protobuf.V1.TakControl takControl_;
    /// <summary>
    /// Optional - if omitted, continue using last reported control
    /// information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Atakmap.Commoncommo.Protobuf.V1.TakControl TakControl {
      get { return takControl_; }
      set {
        takControl_ = value;
      }
    }

    /// <summary>Field number for the "cotEvent" field.</summary>
    public const int CotEventFieldNumber = 2;
    private global::Atakmap.Commoncommo.Protobuf.V1.CotEvent cotEvent_;
    /// <summary>
    /// Optional - if omitted, no event data in this message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Atakmap.Commoncommo.Protobuf.V1.CotEvent CotEvent {
      get { return cotEvent_; }
      set {
        cotEvent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TakMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TakMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TakControl, other.TakControl)) return false;
      if (!object.Equals(CotEvent, other.CotEvent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (takControl_ != null) hash ^= TakControl.GetHashCode();
      if (cotEvent_ != null) hash ^= CotEvent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (takControl_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TakControl);
      }
      if (cotEvent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CotEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (takControl_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TakControl);
      }
      if (cotEvent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CotEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (takControl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TakControl);
      }
      if (cotEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CotEvent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TakMessage other) {
      if (other == null) {
        return;
      }
      if (other.takControl_ != null) {
        if (takControl_ == null) {
          TakControl = new global::Atakmap.Commoncommo.Protobuf.V1.TakControl();
        }
        TakControl.MergeFrom(other.TakControl);
      }
      if (other.cotEvent_ != null) {
        if (cotEvent_ == null) {
          CotEvent = new global::Atakmap.Commoncommo.Protobuf.V1.CotEvent();
        }
        CotEvent.MergeFrom(other.CotEvent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (takControl_ == null) {
              TakControl = new global::Atakmap.Commoncommo.Protobuf.V1.TakControl();
            }
            input.ReadMessage(TakControl);
            break;
          }
          case 18: {
            if (cotEvent_ == null) {
              CotEvent = new global::Atakmap.Commoncommo.Protobuf.V1.CotEvent();
            }
            input.ReadMessage(CotEvent);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (takControl_ == null) {
              TakControl = new global::Atakmap.Commoncommo.Protobuf.V1.TakControl();
            }
            input.ReadMessage(TakControl);
            break;
          }
          case 18: {
            if (cotEvent_ == null) {
              CotEvent = new global::Atakmap.Commoncommo.Protobuf.V1.CotEvent();
            }
            input.ReadMessage(CotEvent);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
